{"version":3,"sources":["components/Sidebar.js","components/Graph.js","components/Tabular.js","actions/index.js","App.js","reducers/data_sales.js","reducers/sorting.js","reducers/index.js","stackline_logo.svg","components/Navbar.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","Sidebar","findData","useSelector","state","classes","Card","className","CardActionArea","CardMedia","component","alt","height","image","title","CardContent","Typography","gutterBottom","variant","color","subtitle","CardActions","tags","map","tag","index","Button","size","Graph","ResponsiveContainer","LineChart","data","sales","XAxis","dataKey","YAxis","Tooltip","Line","type","stroke","Tabular","stl","btn","backgroundColor","backgroundRepeat","border","cursor","outline","dispatch","useDispatch","sortData","Table","stickyHeader","aria-label","TableHead","TableRow","style","padding","Object","keys","key","TableCell","onClick","event","sorter","target","value","new_data","sort","a","b","payload","dataReducer","sort_rows","TableBody","row","weekEnding","retailSales","wholesaleSales","unitsSold","retailerMargin","theme","display","container","paddingTop","spacing","paddingBottom","paper","overflow","flexDirection","fixedHeight","App","fixedHeightPaper","clsx","CssBaseline","content","appBarSpacer","Container","Grid","item","xs","Paper","BASE","require","id","action","rows","months","ordered","i","len","length","entry","m","parseInt","split","push","sortingReducer","allReducer","combineReducers","Navbar","AppBar","position","src","StacklineLogo","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.415720fa.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n});\r\n\r\nexport default function Sidebar() {\r\n  const findData = useSelector(state => state.findData)\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"Contemplative Reptile\"\r\n          height=\"auto\"\r\n          image={findData.image}\r\n          title=\"product image\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {findData.title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {findData.subtitle}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n      {findData.tags.map((tag,index)=> (\r\n        <Button size=\"small\" color=\"primary\">\r\n          {tag}\r\n        </Button>\r\n\r\n      ))}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, Label,CartesianGrid,Tooltip, ResponsiveContainer } from 'recharts';\r\nimport {useSelector} from 'react-redux';\r\n\r\nexport default function Graph() {\r\n  const findData = useSelector(state => state.findData)\r\n\r\n    return (\r\n      <>\r\n      <ResponsiveContainer>\r\n        <LineChart data={findData.sales} >\r\n          <XAxis dataKey=\"weekEnding\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n\r\n          <Line type=\"monotone\" dataKey=\"retailSales\" stroke=\"#40a8ef\" />\r\n          <Line type=\"monotone\" dataKey=\"wholesaleSales\" stroke=\"#3c4858\" />\r\n        </LineChart>\r\n        </ResponsiveContainer>\r\n      </>\r\n    );\r\n  \r\n}","\r\nimport {React} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {dataReducer, sortingReducer} from '../actions/index';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\n\r\n\r\nexport default function Tabular() {  \r\n  const stl = {\r\n    btn: {\r\n      backgroundColor: \"Transparent\",\r\n      backgroundRepeat:\"no-repeat\",\r\n      border: \"none\",\r\n      cursor:\"pointer\",\r\n      outline:\"none\"\r\n  }\r\n  };\r\n  const findData = useSelector(state => state.findData);\r\n  const dispatch = useDispatch(); \r\n  const sortData = useSelector(state => state.sortData);\r\n  const sort_rows = (event) => {\r\n    let sorter = event.target.value;\r\n    let new_data = [...findData.sales];\r\n    if (sortData) {\r\n      new_data.sort((a, b) => (a[sorter] > b[sorter] ? 1 : -1));\r\n    } else {\r\n      new_data.sort((a, b) => (a[sorter] > b[sorter] ? -1 : 1));\r\n    }\r\n    dispatch(sortingReducer());\r\n    dispatch(dataReducer({...findData, sales:new_data}))\r\n\r\n  };\r\nreturn (\r\n    <>\r\n      <Table size=\"large\" stickyHeader aria-label=\"sticky table\">\r\n        <TableHead>\r\n        <TableRow key={0} style={{ padding: \"0px\" }}>\r\n              {Object.keys(findData.sales[0]).map((key, index) => (\r\n                <TableCell\r\n                  key={index}\r\n                >\r\n                  <input\r\n                    key={index}\r\n                    style={stl.btn}\r\n                    type=\"button\"\r\n                    onClick={(event) => {\r\n                      sort_rows(event);\r\n                    }}\r\n                    value={key}\r\n                  />\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {findData.sales.map((row,index) => (\r\n            <TableRow key={index}>\r\n              <TableCell>{row.weekEnding}</TableCell>\r\n              <TableCell>{row.retailSales}</TableCell>\r\n              <TableCell>{row.wholesaleSales}</TableCell>\r\n              <TableCell>{row.unitsSold}</TableCell>\r\n              <TableCell>{row.retailerMargin}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n// onClick={() => props.sortBy(\"retailerMargin\")}\r\n\r\n// let sortedProducts = [...products];\r\n//   if (sortedField !== null) {\r\n//     sortedProducts.sort((a, b) => {\r\n//       if (a[sortedField] < b[sortedField]) {\r\n//         return -1;\r\n//       }\r\n//       if (a[sortedField] > b[sortedField]) {\r\n//         return 1;\r\n//       }\r\n//       return 0;\r\n//     });\r\n//   }","\r\nexport const dataReducer = (sales) => {\r\n    return {\r\n        type: \"TABLED\",\r\n        payload: sales,\r\n    };\r\n};\r\n\r\n\r\nexport const sortingReducer = () => {\r\n    return {\r\n        type: \"SORT_ASCENDING\"\r\n    };\r\n};","\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Sidebar from './components/Sidebar';\nimport Graph from './components/Graph';\nimport Tabular from './components/Tabular';\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n     <Sidebar />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Graph */}\n            <Grid item xs={12}>\n              <Paper className={fixedHeightPaper}>\n                <Graph />\n              </Paper>\n            </Grid>\n            {/* Recent Tabular */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Tabular />\n              </Paper>\n            </Grid>\n            \n          </Grid>\n          \n        </Container>\n      </main>\n    </div>\n  );\n}\n\n","const data = require(\"../data/stackline_frontend_assessment_data_2021.json\");\r\n\r\nconst BASE = data[0];\r\n\r\nconst {id, title, image, subtitle, tags, sales} = BASE;\r\n\r\n\r\nconst dataReducer = (state = BASE, action) => {\r\n    switch(action.type){\r\n        case 'PRODUCTED':\r\n            return(\r\n                function productData(...BASE){\r\n                    return {id, image, title, subtitle, tags};\r\n                }\r\n                \r\n            )\r\n        case 'TABLED':\r\n            return action.payload;\r\n        case 'GRAPHED':\r\n            return(\r\n                function groupData(...BASE){\r\n                var rows = {sales};\r\n                var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n                var ordered = {};\r\n               \r\n                for( var i = 0, len = rows.length; i < len; i++ ) {\r\n                   var entry = rows[i];\r\n                   var m = parseInt(entry.weekEnding.split(\"-\")[1])-1;\r\n                   if( !ordered[months[m]] ) { ordered[months[m]] = []; }\r\n                   ordered[months[m]].push( entry );\r\n               }\r\n            }\r\n\r\n            );\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default dataReducer;\r\n","const sortingReducer = (state = true, action) => {\r\n    switch (action.type) {\r\n      case \"SORT_ASCENDING\":\r\n        return !state;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default sortingReducer;","import dataReducer from './data_sales';\r\nimport sortingReducer from './sorting';\r\nimport {combineReducers} from 'redux';\r\n\r\n\r\nconst allReducer = combineReducers({\r\n    findData: dataReducer,\r\n    sortData: sortingReducer \r\n})\r\n\r\nexport default allReducer;","export default __webpack_public_path__ + \"static/media/stackline_logo.5935081b.svg\";","import AppBar from \"@material-ui/core/AppBar\";\r\nimport StacklineLogo from \"../stackline_logo.svg\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <div className=\"navbar\">\r\n        <img src={StacklineLogo} alt=\"Stackline Logo\" className=\"navbar__img\" />\r\n      </div>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore } from 'redux';\nimport allReducer from './reducers/index';\nimport { Provider } from 'react-redux';\nimport Navbar from './components/Navbar'\n\n\nconst store = createStore(\n  allReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() );\n\n\nReactDOM.render(\n  <Provider store = {store}>\n  <Navbar />\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}